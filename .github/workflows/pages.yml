name: Publish RSS feeds to GitHub Pages

on:
  push:
    branches:
      - main
  schedule:
    - cron: '00 * * * *'
  workflow_dispatch:

env:
  CI: true
jobs:
  publish-feeds:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Playwright
        uses: microsoft/playwright-github-action@v1

      # Firefox 브라우저를 설치하는 명령어입니다.
      - name: Install Firefox
        run: npx playwright install firefox

      # feed-me-up-scotty 실행 명령어입니다.
      # GitHub Actions에서는 재시도가 기본 지원되지 않으므로 || 연산자를 사용하여 최대 3회 시도하도록 합니다.
      - name: Run feed-me-up-scotty with retries
        run: |
          npx feed-me-up-scotty || npx feed-me-up-scotty || npx feed-me-up-scotty

      # GitHub Pages에 배포하는 단계입니다.
      # 조직 리포지토리에서 Fine-grained 토큰 정책으로 인한 403 오류가 발생할 수 있으므로,
      # 기본 제공되는 GITHUB_TOKEN 대신, PAT_TOKEN(개인 액세스 토큰)을 사용하는 방식으로 수정하였습니다.
      - name: Deploy to GitHub Pages
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git remote add gh-pages-remote https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}.git
          git fetch --no-recurse-submodules
          git worktree add ./gh-pages gh-pages || git worktree remove ./gh-pages && git worktree add ./gh-pages gh-pages
          cd gh-pages
          git rm -r .
          cp -r ../public/. .
          git add .
          git commit --message="Deploying to GitHub Pages from $GITHUB_SHA"
          git push gh-pages-remote gh-pages:gh-pages
        env:
          # 기본 GITHUB_TOKEN 대신 PAT_TOKEN을 사용합니다.
          GITHUB_REPOSITORY: ${{ github.repository }}
